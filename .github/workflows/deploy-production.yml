name: Deploy to Production

on:
  push:
    branches: [production]
  workflow_dispatch:

jobs:
  deploy-backend:
    name: Deploy Backend to Vercel
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_BACKEND }}
          working-directory: ./backend
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Comment deployment URL on commit
        uses: actions/github-script@v7
        if: github.event_name == 'push'
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.url }}';
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `✅ Backend deployed to production: ${deploymentUrl}`
            });

  deploy-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest
    needs: deploy-backend
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Vercel
        id: deploy
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_FRONTEND }}
          working-directory: ./frontend
          vercel-args: '--prod'
          scope: ${{ secrets.VERCEL_ORG_ID }}

      - name: Comment deployment URL on commit
        uses: actions/github-script@v7
        if: github.event_name == 'push'
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.url }}';
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: `✅ Frontend deployed to production: ${deploymentUrl}`
            });

  smoke-tests:
    name: Production Smoke Tests
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for deployment to be ready
        run: sleep 30

      - name: Test backend health
        run: |
          curl -f ${{ secrets.PRODUCTION_BACKEND_URL }}/health || echo "Backend health check failed"
        continue-on-error: true

      - name: Test frontend availability
        run: |
          curl -f ${{ secrets.PRODUCTION_FRONTEND_URL }} || echo "Frontend availability check failed"
        continue-on-error: true

      - name: Send deployment notification
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const status = '${{ job.status }}' === 'success' ? '✅ Deployment successful!' : '⚠️ Deployment completed with warnings';
            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: status
            });
